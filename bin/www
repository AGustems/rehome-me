require('../configs/session.config');

const http = require('http');
let app = require('../app');

app.use((req, res, next) => {
  const urls = req.session.visitedUrls
  const lastUrl = urls[urls.length - 2];
  res.status(404);
  res.render('error-404', {lastUrl});
});

app.use((err, req, res, next) => {
  console.error('ERROR', req.method, req.path, err);
  const urls = req.session.visitedUrls;
  const lastUrl = urls[urls.length - 2];
  if (!res.headersSent) {
    res.status(500);
    res.render('error-500', {lastUrl});
  }
});

let server = http.createServer(app);

server.on('error', error => {
  if (error.syscall !== 'listen') { throw error }
  switch (error.code) {
    case 'EACCES':
      console.error(`Port ${process.env.PORT} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`Port ${process.env.PORT} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

server.listen(process.env.PORT, () => {
  console.log(`Listening on http://localhost:${process.env.PORT}`);
});
